{"version":3,"file":"fjl-input-filter.mjs","sources":["../../src/Utils.js","../../src/Input.js","../../src/InputFilter.js"],"sourcesContent":["/**\r\n * Same as `console.error`.  Used by *IO variant methods (methods that work with promises) in fjlInputFilter;\r\n * E.g., used as the error catcher on promises returned from IO processes.\r\n * @function module:fjlInputFilter.defaultErrorHandler\r\n * @returns {void}\r\n */\r\nexport const defaultErrorHandler = console.error.bind(console);\r\n","/**\r\n * Created by Ely on 7/24/2014.\r\n */\r\nimport {assign, apply, compose, concat, isString, isArray, isset, defineEnumProps} from 'fjl';\r\nimport {toValidationResult, toValidationOptions, notEmptyValidator} from 'fjl-validator';\r\nimport {defaultErrorHandler} from './Utils';\r\n\r\n/*---------------------------------------------------*/\r\n/* VIRTUAL TYPES AND INTERFACES */\r\n/*---------------------------------------------------*/\r\n/**\r\n * @interface InputValidationResult\r\n * @memberOf fjlInputFilter\r\n * @property {String} name - `Input` this result was generated with.\r\n * @property {Boolean} result - Result of validation.\r\n * @property {Array} messages - Any error messages if `result` is `false`.\r\n * @property {*} value=null - Value tested against (if `filters` exist on given `#Input` object the `value` is what is returned from the results of running filters on value).\r\n * @property {*} rawValue=null - Raw value tested against.\r\n * @property {*} obscuredValue=null - Obscured value if validation `result` is `true`.\r\n * @property {*} filteredValue=null - Filtered result if validation `result` is `true`.\r\n */\r\n\r\n/**\r\n * @interface InputOptions\r\n * @memberOf fjlInputFilter\r\n * @desc Contains rules for validating and/or filtering an input.\r\n * @property {String} name='' - Input's name.\r\n * @property {Boolean} required=false - Whether input is required or not.\r\n * @property {Array} filters=[] - Any filter functions to apply to value.\r\n * @property {Array} validators=[] - Any validators to validate against for given value (to validator).\r\n * @property {Boolean} breakOnFailure=false - Whether or not to 'break' on a validation failure result or not.\r\n * @property {Boolean} valueObscured=false - Whether to obscure the value being tested against (to the assigned places) or not).\r\n * @property {Function} valueObscurator=((x) => x) - Obscurator used for obscuring a value given to validation.\r\n */\r\n\r\nexport const\r\n\r\n    noValidationRequired = (input, value) =>\r\n        !input.required && (\r\n            !isset(value) || (\r\n                (isString(value) || isArray(value)) &&\r\n                !value.length\r\n            )\r\n        ),\r\n\r\n    /**\r\n     * Validates an input object based.\r\n     * @function module:fjlInputFilter.validateInput\r\n     * @param input {Input|InputOptions}\r\n     * @param value {*}\r\n     * @returns {InputValidationResult}\r\n     */\r\n    validateInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator, name} = input;\r\n\r\n        // If value is not required and is `null` or `undefined`\r\n        if (noValidationRequired(input, value)) {\r\n            return toInputValidationResult({\r\n                result: true,\r\n                name: name || '',\r\n                rawValue: value,\r\n                value,\r\n                filteredValue: value,\r\n                obscuredValue: value\r\n            });\r\n        }\r\n\r\n        // Run validation and filtering\r\n        let vResult = runValidators(validators, breakOnFailure, value),\r\n            fResult = runFilters(filters, value),\r\n            oResult = valueObscured && valueObscurator ? valueObscurator(fResult) : fResult;\r\n\r\n        return toInputValidationResult(assign(vResult, {\r\n            name: name || '',\r\n            rawValue: value,\r\n            value: fResult,\r\n            filteredValue: fResult,\r\n            obscuredValue: oResult\r\n        }));\r\n    },\r\n\r\n    /**\r\n     * Validates an input object that may have IOValidators.  Returns\r\n     * a validation result wrapped in a promise.\r\n     * @function module:fjlInputFilter.validateIOInput\r\n     * @param input {Input|InputOptions}\r\n     * @param value {*}\r\n     * @returns {Promise.<InputValidationResult>}\r\n     */\r\n    validateIOInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator} = input;\r\n\r\n        // If not required and value is `null` or `undefined` return truthy result\r\n        if (noValidationRequired(input, value)) {\r\n            return Promise.resolve(\r\n                toInputValidationResult({\r\n                    result: true,\r\n                    name: input.name || '',\r\n                    rawValue: value,\r\n                    value,\r\n                    filteredValue: value,\r\n                    obscuredValue: value\r\n                })\r\n            );\r\n        }\r\n\r\n        let pendingValidation = validators && validators.length ?\r\n            runIOValidators(validators, breakOnFailure, value, input) :\r\n            Promise.resolve({result: true})\r\n        ;\r\n\r\n        return pendingValidation.then(result =>\r\n            runIOFilters(filters, value)\r\n                .then(filteredValue => {\r\n                    result.rawValue = value;\r\n                    result.value = result.filteredValue = filteredValue;\r\n                    result.obscuredValue =\r\n                        valueObscured && valueObscurator ?\r\n                            valueObscurator(filteredValue) : filteredValue;\r\n                    return toInputValidationResult(result);\r\n                })\r\n            );\r\n    },\r\n\r\n    /**\r\n     * Runs validator against given `value`.\r\n     * @function module:fjlInputFilter.runValidators\r\n     * @param validators {Array.<Function>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param value {*}\r\n     * @returns {*}\r\n     */\r\n    runValidators = (validators, breakOnFailure, value) => {\r\n        let result = true,\r\n            i = 0,\r\n            messageResults = [];\r\n        if (!validators || !validators.length) {\r\n            return toValidationResult({result});\r\n        }\r\n        const limit = validators.length;\r\n        for (; i < limit; i++) {\r\n            const vResult = validators[i](value);\r\n            if (!vResult.result) {\r\n                messageResults.push(vResult.messages);\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return toValidationResult({result, messages: concat(messageResults)});\r\n    },\r\n\r\n    /**\r\n     * Runs (possibly) IOValidators against given `value`.\r\n     * @function module:fjlInputFilter.runIOValidators\r\n     * @param validators {Array.<Function>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param value {*}\r\n     * @param [errorCallback=console.error] {Function}\r\n     * @returns {*}\r\n     */\r\n    runIOValidators = (validators, breakOnFailure, value, errorCallback = defaultErrorHandler) => {\r\n        if (!validators || !validators.length) {\r\n            return Promise.resolve(toValidationResult({result: true}));\r\n        }\r\n        const limit = validators.length,\r\n            pendingResults = [];\r\n        let i = 0,\r\n            result = true;\r\n        for (; i < limit; i++) {\r\n            const validator = validators[i],\r\n                vResult = validator(value);\r\n            if (vResult instanceof Promise) {\r\n                pendingResults.push(vResult.catch(errorCallback));\r\n                continue;\r\n            }\r\n            pendingResults.push(vResult);\r\n            if (!vResult.result) {\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.all(pendingResults)\r\n            .then(results => {\r\n                const failedResults = results.filter(rslt => !rslt.result),\r\n                    interimResult = {\r\n                        result,\r\n                        messages: failedResults.reduce((agg, item) =>\r\n                            agg.concat(item.messages), [])\r\n                    };\r\n                if (failedResults.length) {\r\n                    interimResult.result = false;\r\n                }\r\n                return toValidationResult(interimResult);\r\n            })\r\n            .catch(errorCallback);\r\n    },\r\n\r\n    /**\r\n     * Runs filters on value (successively).\r\n     * @function module:fjlInputFilter.runFilters\r\n     * @param filters {Array.<Function>}\r\n     * @param value {*}\r\n     * @returns {*}\r\n     */\r\n    runFilters = (filters, value) => filters && filters.length ?\r\n        apply(compose, filters)(value) : value,\r\n\r\n    /**\r\n     * Runs filters on value (successively) and returns result wrapped in a promise.\r\n     * @function module:fjlInputFilter.runIOFilters\r\n     * @param filters {Array.<Function>}\r\n     * @param value {*}\r\n     * @param [errorCallback=console.error] {Function}\r\n     * @returns {Promise.<*>}\r\n     */\r\n    runIOFilters = (filters, value, errorCallback = defaultErrorHandler) =>\r\n        runFilters(filters ? filters.map(filter => x => x.then(filter)) : null,\r\n            Promise.resolve(value).catch(errorCallback)),\r\n\r\n    /**\r\n     * Returns an `InputOptions` object from given object and optionally turns the `out` object into\r\n     * said `InputOptions` with firstParam assigned on top of it.\r\n     * @function module:fjlInputFilter.toInput\r\n     * @param inputObj {Object|*} - Object to build `InputOptions` object from.\r\n     * @param [out = {}] {Object|*}\r\n     * @returns {InputOptions}\r\n     */\r\n    toInput = (inputObj, out = {}) => {\r\n        const _inputObj = defineEnumProps([\r\n            [String,    'name', ''],\r\n            [Boolean,   'required', false],\r\n            [Array,     'filters', []],\r\n            [Array,     'validators', []],\r\n            [Boolean,   'breakOnFailure', false]\r\n        ], toValidationOptions(out));\r\n        if (isString(inputObj)) {\r\n            _inputObj.name = inputObj;\r\n        }\r\n        else if (inputObj) {\r\n            assign(_inputObj, inputObj);\r\n        }\r\n        if (_inputObj.required) {\r\n            _inputObj.validators = _inputObj.validators.slice(0);\r\n            _inputObj.validators.push(notEmptyValidator(null));\r\n        }\r\n        return _inputObj;\r\n    },\r\n\r\n    /**\r\n     * Returns an input validation result object with values of given object\r\n     * applied/assigned to it.\r\n     * @function module:fjlInputFilter.toInputValidationResult\r\n     * @param resultObj {Object|*}\r\n     * @returns {InputValidationResult}\r\n     */\r\n    toInputValidationResult = resultObj => {\r\n        const _result = defineEnumProps([\r\n            [String, 'name', ''],\r\n            [Boolean, 'result', false],\r\n            [Array, 'messages', []]\r\n        ], {\r\n            value: null,\r\n            rawValue: null,\r\n            obscuredValue: null,\r\n            filteredValue: null\r\n        });\r\n        return assign(_result, resultObj);\r\n    }\r\n;\r\n\r\n/**\r\n * @memberOf fjlInputFilter\r\n * @class Input\r\n * @extends InputOptions\r\n */\r\nexport class Input {\r\n    constructor (inputObj) {\r\n        toInput(inputObj, this);\r\n    }\r\n    static of (inputObj) {\r\n        return new Input(inputObj);\r\n    }\r\n    validate (value) {\r\n        return validateInput(this, value);\r\n    }\r\n    validateIO (value) {\r\n        return validateIOInput(this, value);\r\n    }\r\n}\r\n","import {partition, foldl, map, assign, keys, toAssocList, fromAssocList, defineEnumProps} from 'fjl';\r\nimport {validateInput, validateIOInput, toInput} from './Input';\r\nimport {defaultErrorHandler} from './Utils';\r\n\r\n/**\r\n * @interface InputFilter {Object.<String, (Input|InputOptions)>}\r\n * @desc Contains input objects to validate against (key-value pair object).\r\n */\r\n\r\n/**\r\n * @interface InputFilterResult\r\n * @memberOf fjlInputFilter\r\n * @property {Boolean} result - Result of validation.\r\n * @property {Object.<String,InputValidationResult>} validInputs - Valid input results object.\r\n * @property {Object.<String,InputValidationResult>} invalidInputs - Invalid input results object.\r\n * @property {Array.<String,InputValidationResult>} validResults - Valid input results associative array.\r\n * @property {Array.<String,InputValidationResult>} invalidResults - Invalid input results associative array.\r\n * @property {Object.<String,Array.<String>>} messages - Error messages (if any) mapped to input names.\r\n */\r\n\r\nexport const\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateInputFilter\r\n     * @param inputsObj {InputFilter}\r\n     * @param valuesObj {Object.<String,*>}\r\n     * @returns {InputFilterResult}\r\n     */\r\n    validateInputFilter = (inputsObj, valuesObj) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return toInputFilterResult({result: false});\r\n        }\r\n        const [validResults, invalidResults] =\r\n            partition(([_, result]) => result.result,\r\n                map(([key, inputObj]) =>\r\n                    [key, validateInput(inputObj, valuesObj[key])],\r\n                    toAssocList(inputsObj)\r\n                )),\r\n            messages = foldl((agg, [key, result]) => {\r\n                agg[key] = result.messages;\r\n                return agg;\r\n            }, {}, invalidResults),\r\n            validInputs = fromAssocList(validResults),\r\n            invalidInputs = fromAssocList(invalidResults),\r\n            result = !invalidResults.length\r\n        ;\r\n        return toInputFilterResult({\r\n            result,\r\n            validInputs,\r\n            invalidInputs,\r\n            validResults,\r\n            invalidResults,\r\n            messages\r\n        });\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateIOInputFilter\r\n     * @param inputsObj {InputFilter}\r\n     * @param valuesObj {Object.<String, *>}\r\n     * @param errorHandler {Function}\r\n     * @returns {Promise.<InputFilterResult>}\r\n     */\r\n    validateIOInputFilter = (inputsObj, valuesObj, errorHandler = defaultErrorHandler) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return Promise.resolve(toInputFilterResult({result: false}));\r\n        }\r\n\r\n        return Promise.all(map(([key, inputObj]) =>\r\n            validateIOInputWithName(inputObj, key, valuesObj[key]),\r\n                toAssocList(inputsObj)\r\n        )).then(assocList => {\r\n            const [validResults, invalidResults] =\r\n                    partition(([_, result]) => result.result, assocList),\r\n                messages = foldl((agg, [key, result]) => {\r\n                    agg[key] = result.messages;\r\n                    return agg;\r\n                }, {}, invalidResults),\r\n                validInputs = fromAssocList(validResults),\r\n                invalidInputs = fromAssocList(invalidResults),\r\n                result = !invalidResults.length\r\n            ;\r\n\r\n            return toInputFilterResult({\r\n                result,\r\n                validInputs,\r\n                invalidInputs,\r\n                validResults,\r\n                invalidResults,\r\n                messages\r\n            });\r\n        },\r\n            errorHandler);\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateIOInputWithName\r\n     * @param input {Input|InputOptions}\r\n     * @param name {String}\r\n     * @param value {*}\r\n     * @param errorHandler {Function}\r\n     * @returns {Promise.<Array.<String,InputValidationResult>>}\r\n     */\r\n    validateIOInputWithName = (input, name, value, errorHandler = defaultErrorHandler) =>\r\n        validateIOInput(input, value)\r\n            .then(result => Promise.resolve([name, result]), errorHandler),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.toInputFilter\r\n     * @param inObj {Object.<String, Object>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param outObj {Object|*}\r\n     * @returns {InputFilter}\r\n     */\r\n    toInputFilter = (inObj, breakOnFailure = false, outObj = {}) =>\r\n        Object.defineProperties(outObj,\r\n            foldl((agg, [key, inputOpsObj]) => {\r\n                const inputObj = toInput(assign(inputOpsObj, {name: key}));\r\n                inputObj.breakOnFailure = breakOnFailure;\r\n                agg[key] = {\r\n                    value: inputObj,\r\n                    enumerable: true\r\n                };\r\n                return agg;\r\n            }, {}, map(key =>\r\n                [key, inObj[key]],\r\n                keys(inObj)\r\n            ))\r\n        ),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.toInputFilterResult\r\n     * @param inResult {Object}\r\n     * @param outResult {Object|*}\r\n     * @returns {InputFilterResult}\r\n     */\r\n    toInputFilterResult = (inResult, outResult = {}) => {\r\n        const _outResult = defineEnumProps([\r\n            [Boolean, 'result', false],\r\n            [Object,  'messages', {}],\r\n            [Object,  'validInputs', {}],\r\n            [Object,  'invalidInputs', {}],\r\n            [Array,   'validResults', []],\r\n            [Array,   'invalidResults', []]\r\n        ], outResult);\r\n        return inResult ? assign(_outResult, inResult) : _outResult;\r\n    }\r\n\r\n;\r\n\r\n/**\r\n * @class InputFilter\r\n */\r\nexport class InputFilter {\r\n    constructor (inputsObj, breakOnFailure = false) {\r\n        toInputFilter(inputsObj, breakOnFailure, this);\r\n    }\r\n    static of (inputsObj, breakOnFailure) {\r\n        return new InputFilter(inputsObj, breakOnFailure);\r\n    }\r\n    validate (data) {\r\n        return validateInputFilter(this, data);\r\n    }\r\n    validateIO (data) {\r\n        return validateIOInputFilter(this, data);\r\n    }\r\n}\r\n"],"names":["defaultErrorHandler","console","error","bind","noValidationRequired","input","value","required","isset","isString","isArray","length","validateInput","validators","filters","breakOnFailure","valueObscured","valueObscurator","name","toInputValidationResult","result","rawValue","filteredValue","obscuredValue","vResult","runValidators","fResult","runFilters","oResult","assign","validateIOInput","Promise","resolve","pendingValidation","runIOValidators","then","runIOFilters","i","messageResults","toValidationResult","limit","push","messages","concat","errorCallback","pendingResults","validator","all","results","failedResults","filter","rslt","interimResult","reduce","agg","item","apply","compose","map","x","toInput","inputObj","out","_inputObj","defineEnumProps","String","Boolean","Array","toValidationOptions","slice","notEmptyValidator","resultObj","_result","Input","validateInputFilter","inputsObj","valuesObj","toInputFilterResult","partition","_","key","toAssocList","validResults","invalidResults","foldl","validInputs","fromAssocList","invalidInputs","validateIOInputFilter","errorHandler","validateIOInputWithName","assocList","toInputFilter","inObj","outObj","Object","defineProperties","inputOpsObj","enumerable","keys","inResult","outResult","_outResult","InputFilter","data"],"mappings":"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"}
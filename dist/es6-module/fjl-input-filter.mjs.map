{"version":3,"file":"fjl-input-filter.mjs","sources":["../../src/Utils.js","../../src/Input.js","../../src/InputFilter.js","../../src/fjlInputFilter.js"],"sourcesContent":["/**\r\n * Same as `console.error`.  Used by *IO variant methods (methods that work with promises) in fjlInputFilter;\r\n * E.g., used as the error catcher on promises returned from IO processes.\r\n * @function module:fjlInputFilter.defaultErrorHandler\r\n * @returns {void}\r\n */\r\nexport const defaultErrorHandler = console.error.bind(console);\r\n","/**\r\n * Created by Ely on 7/24/2014.\r\n */\r\nimport {defineEnumProps} from 'fjl-mutable';\r\nimport {assign, apply, compose, concat, isString, isArray, isset} from 'fjl';\r\nimport {toValidationResult, toValidationOptions, notEmptyValidator} from 'fjl-validator';\r\nimport {defaultErrorHandler} from './Utils';\r\n\r\n/*---------------------------------------------------*/\r\n/* VIRTUAL TYPES AND INTERFACES */\r\n/*---------------------------------------------------*/\r\n/**\r\n * @interface InputValidationResult\r\n * @memberOf fjlInputFilter\r\n * @property {String} name - `Input` this result was generated with.\r\n * @property {Boolean} result - Result of validation.\r\n * @property {Array} messages - Any error messages if `result` is `false`.\r\n * @property {*} value=null - Value tested against (if `filters` exist on given `#Input` object the `value` is what is returned from the results of running filters on value).\r\n * @property {*} rawValue=null - Raw value tested against.\r\n * @property {*} obscuredValue=null - Obscured value if validation `result` is `true`.\r\n * @property {*} filteredValue=null - Filtered result if validation `result` is `true`.\r\n */\r\n\r\n/**\r\n * @interface InputOptions\r\n * @memberOf fjlInputFilter\r\n * @desc Contains rules for validating and/or filtering an input.\r\n * @property {String} name='' - Input's name.\r\n * @property {Boolean} required=false - Whether input is required or not.\r\n * @property {Array} filters=[] - Any filter functions to apply to value.\r\n * @property {Array} validators=[] - Any validators to validate against for given value (to validator).\r\n * @property {Boolean} breakOnFailure=false - Whether or not to 'break' on a validation failure result or not.\r\n * @property {Boolean} valueObscured=false - Whether to obscure the value being tested against (to the assigned places) or not).\r\n * @property {Function} valueObscurator=((x) => x) - Obscurator used for obscuring a value given to validation.\r\n */\r\n\r\nexport const\r\n\r\n    noValidationRequired = (input, value) =>\r\n        !input.required && (\r\n            !isset(value) || (\r\n                (isString(value) || isArray(value)) &&\r\n                !value.length\r\n            )\r\n        ),\r\n\r\n    /**\r\n     * Validates an input object based.\r\n     * @function module:fjlInputFilter.validateInput\r\n     * @param input {Input|InputOptions}\r\n     * @param value {*}\r\n     * @returns {InputValidationResult}\r\n     */\r\n    validateInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator, name} = input;\r\n\r\n        // If value is not required and is `null` or `undefined`\r\n        if (noValidationRequired(input, value)) {\r\n            return toInputValidationResult({\r\n                result: true,\r\n                name: name || '',\r\n                rawValue: value,\r\n                value,\r\n                filteredValue: value,\r\n                obscuredValue: value\r\n            });\r\n        }\r\n\r\n        // Run validation and filtering\r\n        let vResult = runValidators(validators, breakOnFailure, value),\r\n            fResult = runFilters(filters, value),\r\n            oResult = valueObscured && valueObscurator ? valueObscurator(fResult) : fResult;\r\n\r\n        return toInputValidationResult(assign(vResult, {\r\n            name: name || '',\r\n            rawValue: value,\r\n            value: fResult,\r\n            filteredValue: fResult,\r\n            obscuredValue: oResult\r\n        }));\r\n    },\r\n\r\n    /**\r\n     * Validates an input object that may have IOValidators.  Returns\r\n     * a validation result wrapped in a promise.\r\n     * @function module:fjlInputFilter.validateIOInput\r\n     * @param input {Input|InputOptions}\r\n     * @param value {*}\r\n     * @returns {Promise.<InputValidationResult>}\r\n     */\r\n    validateIOInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator} = input;\r\n\r\n        // If not required and value is `null` or `undefined` return truthy result\r\n        if (noValidationRequired(input, value)) {\r\n            return Promise.resolve(\r\n                toInputValidationResult({\r\n                    result: true,\r\n                    name: input.name || '',\r\n                    rawValue: value,\r\n                    value,\r\n                    filteredValue: value,\r\n                    obscuredValue: value\r\n                })\r\n            );\r\n        }\r\n\r\n        let pendingValidation = validators && validators.length ?\r\n            runIOValidators(validators, breakOnFailure, value, input) :\r\n            Promise.resolve({result: true})\r\n        ;\r\n\r\n        return pendingValidation.then(result =>\r\n            runIOFilters(filters, value)\r\n                .then(filteredValue => {\r\n                    result.rawValue = value;\r\n                    result.value = result.filteredValue = filteredValue;\r\n                    result.obscuredValue =\r\n                        valueObscured && valueObscurator ?\r\n                            valueObscurator(filteredValue) : filteredValue;\r\n                    return toInputValidationResult(result);\r\n                })\r\n            );\r\n    },\r\n\r\n    /**\r\n     * Runs validator against given `value`.\r\n     * @function module:fjlInputFilter.runValidators\r\n     * @param validators {Array.<Function>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param value {*}\r\n     * @returns {*}\r\n     */\r\n    runValidators = (validators, breakOnFailure, value) => {\r\n        let result = true,\r\n            i = 0,\r\n            messageResults = [];\r\n        if (!validators || !validators.length) {\r\n            return toValidationResult({result});\r\n        }\r\n        const limit = validators.length;\r\n        for (; i < limit; i++) {\r\n            const vResult = validators[i](value);\r\n            if (!vResult.result) {\r\n                messageResults.push(vResult.messages);\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return toValidationResult({result, messages: concat(messageResults)});\r\n    },\r\n\r\n    /**\r\n     * Runs (possibly) IOValidators against given `value`.\r\n     * @function module:fjlInputFilter.runIOValidators\r\n     * @param validators {Array.<Function>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param value {*}\r\n     * @param [errorCallback=console.error] {Function}\r\n     * @returns {*}\r\n     */\r\n    runIOValidators = (validators, breakOnFailure, value, errorCallback = defaultErrorHandler) => {\r\n        if (!validators || !validators.length) {\r\n            return Promise.resolve(toValidationResult({result: true}));\r\n        }\r\n        const limit = validators.length,\r\n            pendingResults = [];\r\n        let i = 0,\r\n            result = true;\r\n        for (; i < limit; i++) {\r\n            const validator = validators[i],\r\n                vResult = validator(value);\r\n            if (vResult instanceof Promise) {\r\n                pendingResults.push(vResult.catch(errorCallback));\r\n                continue;\r\n            }\r\n            pendingResults.push(vResult);\r\n            if (!vResult.result) {\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.all(pendingResults)\r\n            .then(results => {\r\n                const failedResults = results.filter(rslt => !rslt.result),\r\n                    interimResult = {\r\n                        result,\r\n                        messages: failedResults.reduce((agg, item) =>\r\n                            agg.concat(item.messages), [])\r\n                    };\r\n                if (failedResults.length) {\r\n                    interimResult.result = false;\r\n                }\r\n                return toValidationResult(interimResult);\r\n            })\r\n            .catch(errorCallback);\r\n    },\r\n\r\n    /**\r\n     * Runs filters on value (successively).\r\n     * @function module:fjlInputFilter.runFilters\r\n     * @param filters {Array.<Function>}\r\n     * @param value {*}\r\n     * @returns {*}\r\n     */\r\n    runFilters = (filters, value) => filters && filters.length ?\r\n        apply(compose, filters)(value) : value,\r\n\r\n    /**\r\n     * Runs filters on value (successively) and returns result wrapped in a promise.\r\n     * @function module:fjlInputFilter.runIOFilters\r\n     * @param filters {Array.<Function>}\r\n     * @param value {*}\r\n     * @param [errorCallback=console.error] {Function}\r\n     * @returns {Promise.<*>}\r\n     */\r\n    runIOFilters = (filters, value, errorCallback = defaultErrorHandler) =>\r\n        runFilters(filters ? filters.map(filter => x => x.then(filter)) : null,\r\n            Promise.resolve(value).catch(errorCallback)),\r\n\r\n    /**\r\n     * Returns an `InputOptions` object from given object and optionally turns the `out` object into\r\n     * said `InputOptions` with firstParam assigned on top of it.\r\n     * @function module:fjlInputFilter.toInput\r\n     * @param inputObj {Object|*} - Object to build `InputOptions` object from.\r\n     * @param [out = {}] {Object|*}\r\n     * @returns {InputOptions}\r\n     */\r\n    toInput = (inputObj, out = {}) => {\r\n        const _inputObj = defineEnumProps([\r\n            [String,    'name', ''],\r\n            [Boolean,   'required', false],\r\n            [Array,     'filters', []],\r\n            [Array,     'validators', []],\r\n            [Boolean,   'breakOnFailure', false]\r\n        ], toValidationOptions(out));\r\n        if (isString(inputObj)) {\r\n            _inputObj.name = inputObj;\r\n        }\r\n        else if (inputObj) {\r\n            assign(_inputObj, inputObj);\r\n        }\r\n        if (_inputObj.required) {\r\n            _inputObj.validators = _inputObj.validators.slice(0);\r\n            _inputObj.validators.push(notEmptyValidator(null));\r\n        }\r\n        return _inputObj;\r\n    },\r\n\r\n    /**\r\n     * Returns an input validation result object with values of given object\r\n     * applied/assigned to it.\r\n     * @function module:fjlInputFilter.toInputValidationResult\r\n     * @param resultObj {Object|*}\r\n     * @returns {InputValidationResult}\r\n     */\r\n    toInputValidationResult = resultObj => {\r\n        const _result = defineEnumProps([\r\n            [String, 'name', ''],\r\n            [Boolean, 'result', false],\r\n            [Array, 'messages', []]\r\n        ], {\r\n            value: null,\r\n            rawValue: null,\r\n            obscuredValue: null,\r\n            filteredValue: null\r\n        });\r\n        return assign(_result, resultObj);\r\n    }\r\n;\r\n\r\n/**\r\n * @memberOf fjlInputFilter\r\n * @class Input\r\n * @extends InputOptions\r\n */\r\nexport class Input {\r\n    constructor (inputObj) {\r\n        toInput(inputObj, this);\r\n    }\r\n    static of (inputObj) {\r\n        return new Input(inputObj);\r\n    }\r\n    validate (value) {\r\n        return validateInput(this, value);\r\n    }\r\n    validateIO (value) {\r\n        return validateIOInput(this, value);\r\n    }\r\n}\r\n","import {partition, foldl, map, assign, keys, toAssocList, fromAssocList} from 'fjl';\r\nimport {validateInput, validateIOInput, toInput} from './Input';\r\nimport {defineEnumProps} from 'fjl-mutable';\r\nimport {defaultErrorHandler} from './Utils';\r\n\r\n/**\r\n * @interface InputFilter {Object.<String, (Input|InputOptions)>}\r\n * @desc Contains input objects to validate against (key-value pair object).\r\n */\r\n\r\n/**\r\n * @interface InputFilterResult\r\n * @memberOf fjlInputFilter\r\n * @property {Boolean} result - Result of validation.\r\n * @property {Object.<String,InputValidationResult>} validInputs - Valid input results object.\r\n * @property {Object.<String,InputValidationResult>} invalidInputs - Invalid input results object.\r\n * @property {Array.<String,InputValidationResult>} validResults - Valid input results associative array.\r\n * @property {Array.<String,InputValidationResult>} invalidResults - Invalid input results associative array.\r\n * @property {Object.<String,Array.<String>>} messages - Error messages (if any) mapped to input names.\r\n */\r\n\r\nexport const\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateInputFilter\r\n     * @param inputsObj {InputFilter}\r\n     * @param valuesObj {Object.<String,*>}\r\n     * @returns {InputFilterResult}\r\n     */\r\n    validateInputFilter = (inputsObj, valuesObj) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return toInputFilterResult({result: false});\r\n        }\r\n        const [validResults, invalidResults] =\r\n            partition(([_, result]) => result.result,\r\n                map(([key, inputObj]) =>\r\n                    [key, validateInput(inputObj, valuesObj[key])],\r\n                    toAssocList(inputsObj)\r\n                )),\r\n            messages = foldl((agg, [key, result]) => {\r\n                agg[key] = result.messages;\r\n                return agg;\r\n            }, {}, invalidResults),\r\n            validInputs = fromAssocList(validResults),\r\n            invalidInputs = fromAssocList(invalidResults),\r\n            result = !invalidResults.length\r\n        ;\r\n        return toInputFilterResult({\r\n            result,\r\n            validInputs,\r\n            invalidInputs,\r\n            validResults,\r\n            invalidResults,\r\n            messages\r\n        });\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateIOInputFilter\r\n     * @param inputsObj {InputFilter}\r\n     * @param valuesObj {Object.<String, *>}\r\n     * @param errorHandler {Function}\r\n     * @returns {Promise.<InputFilterResult>}\r\n     */\r\n    validateIOInputFilter = (inputsObj, valuesObj, errorHandler = defaultErrorHandler) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return Promise.resolve(toInputFilterResult({result: false}));\r\n        }\r\n\r\n        return Promise.all(map(([key, inputObj]) =>\r\n            validateIOInputWithName(inputObj, key, valuesObj[key]),\r\n                toAssocList(inputsObj)\r\n        )).then(assocList => {\r\n            const [validResults, invalidResults] =\r\n                    partition(([_, result]) => result.result, assocList),\r\n                messages = foldl((agg, [key, result]) => {\r\n                    agg[key] = result.messages;\r\n                    return agg;\r\n                }, {}, invalidResults),\r\n                validInputs = fromAssocList(validResults),\r\n                invalidInputs = fromAssocList(invalidResults),\r\n                result = !invalidResults.length\r\n            ;\r\n\r\n            return toInputFilterResult({\r\n                result,\r\n                validInputs,\r\n                invalidInputs,\r\n                validResults,\r\n                invalidResults,\r\n                messages\r\n            });\r\n        },\r\n            errorHandler);\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateIOInputWithName\r\n     * @param input {Input|InputOptions}\r\n     * @param name {String}\r\n     * @param value {*}\r\n     * @param errorHandler {Function}\r\n     * @returns {Promise.<Array.<String,InputValidationResult>>}\r\n     */\r\n    validateIOInputWithName = (input, name, value, errorHandler = defaultErrorHandler) =>\r\n        validateIOInput(input, value)\r\n            .then(result => Promise.resolve([name, result]), errorHandler),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.toInputFilter\r\n     * @param inObj {Object.<String, Object>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param outObj {Object|*}\r\n     * @returns {InputFilter}\r\n     */\r\n    toInputFilter = (inObj, breakOnFailure = false, outObj = {}) =>\r\n        Object.defineProperties(outObj,\r\n            foldl((agg, [key, inputOpsObj]) => {\r\n                const inputObj = toInput(assign(inputOpsObj, {name: key}));\r\n                inputObj.breakOnFailure = breakOnFailure;\r\n                agg[key] = {\r\n                    value: inputObj,\r\n                    enumerable: true\r\n                };\r\n                return agg;\r\n            }, {}, map(key =>\r\n                [key, inObj[key]],\r\n                keys(inObj)\r\n            ))\r\n        ),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.toInputFilterResult\r\n     * @param inResult {Object}\r\n     * @param outResult {Object|*}\r\n     * @returns {InputFilterResult}\r\n     */\r\n    toInputFilterResult = (inResult, outResult = {}) => {\r\n        const _outResult = defineEnumProps([\r\n            [Boolean, 'result', false],\r\n            [Object,  'messages', {}],\r\n            [Object,  'validInputs', {}],\r\n            [Object,  'invalidInputs', {}],\r\n            [Array,   'validResults', []],\r\n            [Array,   'invalidResults', []]\r\n        ], outResult);\r\n        return inResult ? assign(_outResult, inResult) : _outResult;\r\n    }\r\n\r\n;\r\n\r\n/**\r\n * @class InputFilter\r\n */\r\nexport class InputFilter {\r\n    constructor (inputsObj, breakOnFailure = false) {\r\n        toInputFilter(inputsObj, breakOnFailure, this);\r\n    }\r\n    static of (inputsObj, breakOnFailure) {\r\n        return new InputFilter(inputsObj, breakOnFailure);\r\n    }\r\n    validate (data) {\r\n        return validateInputFilter(this, data);\r\n    }\r\n    validateIO (data) {\r\n        return validateIOInputFilter(this, data);\r\n    }\r\n}\r\n","/**\r\n * @module fjlInputFilter\r\n */\r\nexport * from './Input';\r\nexport * from './InputFilter';\r\n"],"names":["defaultErrorHandler","console","error","bind","noValidationRequired","input","value","required","isset","isString","isArray","length","validateInput","validators","filters","breakOnFailure","valueObscured","valueObscurator","name","toInputValidationResult","result","rawValue","filteredValue","obscuredValue","vResult","runValidators","fResult","runFilters","oResult","assign","validateIOInput","Promise","resolve","pendingValidation","runIOValidators","then","runIOFilters","i","messageResults","toValidationResult","limit","push","messages","concat","errorCallback","pendingResults","validator","catch","all","results","failedResults","filter","rslt","interimResult","reduce","agg","item","apply","compose","map","x","toInput","inputObj","out","_inputObj","defineEnumProps","String","Boolean","Array","toValidationOptions","slice","notEmptyValidator","resultObj","_result","Input","constructor","of","validate","validateIO","validateInputFilter","inputsObj","valuesObj","toInputFilterResult","validResults","invalidResults","partition","_","key","toAssocList","foldl","validInputs","fromAssocList","invalidInputs","validateIOInputFilter","errorHandler","validateIOInputWithName","assocList","toInputFilter","inObj","outObj","Object","defineProperties","inputOpsObj","enumerable","keys","inResult","outResult","_outResult","InputFilter","data"],"mappings":"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"}
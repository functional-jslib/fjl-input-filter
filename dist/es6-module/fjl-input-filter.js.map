{"version":3,"file":"fjl-input-filter.js","sources":["../../src/Utils.js","../../src/Input.js","../../src/InputFilter.js","../../src/fjlInputFilter.js"],"sourcesContent":["/**\n * Same as `console.error`.  Used by *IO variant methods (methods that work with promises) in fjlInputFilter;\n * E.g., used as the error catcher on promises returned from IO processes.\n * @function module:fjlInputFilter.defaultErrorHandler\n * @returns {void}\n */\nexport const defaultErrorHandler = console.error.bind(console);\n","/**\n * Created by Ely on 7/24/2014.\n */\nimport {defineEnumProps$} from 'fjl-mutable';\nimport {assign, apply, compose, concat, isString} from 'fjl';\nimport {toValidationResult, toValidationOptions, notEmptyValidator} from 'fjl-validator';\nimport {defaultErrorHandler} from './Utils';\n\n/*---------------------------------------------------*/\n/* VIRTUAL TYPES AND INTERFACES */\n/*---------------------------------------------------*/\n/**\n * @interface InputValidationResult\n * @memberOf fjlInputFilter\n * @property {String} name - `Input` this result was generated with.\n * @property {Boolean} result - Result of validation.\n * @property {Array} messages - Any error messages if `result` is `false`.\n * @property {*} value=null - Value tested against (if `filters` exist on given `#Input` object the `value` is what is returned from the results of running filters on value).\n * @property {*} rawValue=null - Raw value tested against.\n * @property {*} obscuredValue=null - Obscured value if validation `result` is `true`.\n * @property {*} filteredValue=null - Filtered result if validation `result` is `true`.\n */\n\n/**\n * @interface InputOptions\n * @memberOf fjlInputFilter\n * @desc Contains rules for validating and/or filtering an input.\n * @property {String} name='' - Input's name.\n * @property {Boolean} required=false - Whether input is required or not.\n * @property {Array} filters=[] - Any filter functions to apply to value.\n * @property {Array} validators=[] - Any validators to validate against for given value (to validator).\n * @property {Boolean} breakOnFailure=false - Whether or not to 'break' on a validation failure result or not.\n * @property {Boolean} valueObscured=false - Whether to obscure the value being tested against (to the assigned places) or not).\n * @property {Function} valueObscurator=((x) => x) - Obscurator used for obscuring a value given to validation.\n */\n\nexport const\n\n    /**\n     * Validates an input object based.\n     * @function module:fjlInputFilter.validateInput\n     * @param input {Input|InputOptions}\n     * @param value {*}\n     * @returns {InputValidationResult}\n     */\n    validateInput = (input, value) => {\n        const {validators, filters, breakOnFailure,\n                valueObscured, valueObscurator, name} = input,\n            vResult = runValidators(validators, breakOnFailure, value),\n            fResult = runFilters(filters, value),\n            oResult = valueObscured && valueObscurator ? valueObscurator(fResult) : fResult;\n        return toInputValidationResult(assign(vResult, {\n            name: name || '',\n            rawValue: value,\n            value: fResult,\n            filteredValue: fResult,\n            obscuredValue: oResult\n        }));\n    },\n\n    /**\n     * Validates an input object that may have IOValidators.  Returns\n     * a validation result wrapped in a promise.\n     * @function module:fjlInputFilter.validateIOInput\n     * @param input {Input|InputOptions}\n     * @param value {*}\n     * @returns {Promise.<InputValidationResult>}\n     */\n    validateIOInput = (input, value) => {\n        const {validators, filters, breakOnFailure,\n                valueObscured, valueObscurator} = input,\n            pendingValidation = validators && validators.length ?\n                runIOValidators(validators, breakOnFailure, value, input) :\n                    Promise.resolve({result: true})\n        ;\n        return pendingValidation.then(result =>\n            runIOFilters(filters, value)\n                .then(filteredValue => {\n                    result.rawValue = value;\n                    result.value = result.filteredValue = filteredValue;\n                    result.obscuredValue =\n                        valueObscured && valueObscurator ?\n                            valueObscurator(filteredValue) : filteredValue;\n                    return toInputValidationResult(result);\n                })\n        );\n    },\n\n    /**\n     * Runs validator against given `value`.\n     * @function module:fjlInputFilter.runValidators\n     * @param validators {Array.<Function>}\n     * @param breakOnFailure {Boolean}\n     * @param value {*}\n     * @returns {*}\n     */\n    runValidators = (validators, breakOnFailure, value) => {\n        let result = true,\n            i = 0,\n            messageResults = [];\n        if (!validators || !validators.length) {\n            return toValidationResult({result});\n        }\n        const limit = validators.length;\n        for (; i < limit; i++) {\n            const vResult = validators[i](value);\n            if (!vResult.result) {\n                messageResults.push(vResult.messages);\n                result = false;\n                if (breakOnFailure) {\n                    break;\n                }\n            }\n        }\n        return toValidationResult({result, messages: concat(messageResults)});\n    },\n\n    /**\n     * Runs (possibly) IOValidators against given `value`.\n     * @function module:fjlInputFilter.runIOValidators\n     * @param validators {Array.<Function>}\n     * @param breakOnFailure {Boolean}\n     * @param value {*}\n     * @param [errorCallback=console.error] {Function}\n     * @returns {*}\n     */\n    runIOValidators = (validators, breakOnFailure, value, errorCallback = defaultErrorHandler) => {\n        if (!validators || !validators.length) {\n            return Promise.resolve(toValidationResult({result: true}));\n        }\n        const limit = validators.length,\n            pendingResults = [];\n        let i = 0,\n            result = true;\n        for (; i < limit; i++) {\n            const validator = validators[i],\n                vResult = validator(value);\n            if (vResult instanceof Promise) {\n                pendingResults.push(vResult.catch(errorCallback));\n                continue;\n            }\n            pendingResults.push(vResult);\n            if (!vResult.result) {\n                result = false;\n                if (breakOnFailure) {\n                    break;\n                }\n            }\n        }\n\n        return Promise.all(pendingResults)\n            .then(results => {\n                const failedResults = results.filter(rslt => !rslt.result),\n                    interimResult = {\n                        result,\n                        messages: failedResults.reduce((agg, item) => {\n                            agg = agg.concat(item.messages);\n                            return agg;\n                        }, [])\n                    };\n                if (failedResults.length) {\n                    interimResult.result = false;\n                }\n                return toValidationResult(interimResult);\n            })\n            .catch(errorCallback);\n    },\n\n    /**\n     * Runs filters on value (successively).\n     * @function module:fjlInputFilter.runFilters\n     * @param filters {Array.<Function>}\n     * @param value {*}\n     * @returns {*}\n     */\n    runFilters = (filters, value) => filters && filters.length ?\n        apply(compose, filters)(value) : value,\n\n    /**\n     * Runs filters on value (successively) and returns result wrapped in a promise.\n     * @function module:fjlInputFilter.runIOFilters\n     * @param filters {Array.<Function>}\n     * @param value {*}\n     * @param [errorCallback=console.error] {Function}\n     * @returns {Promise.<*>}\n     */\n    runIOFilters = (filters, value, errorCallback = defaultErrorHandler) =>\n        runFilters(filters ? filters.map(filter => x => x.then(filter)) : null,\n            Promise.resolve(value).catch(errorCallback)),\n\n    /**\n     * Returns an `InputOptions` object from given object and optionally turns the `out` object into\n     * said `InputOptions` with firstParam assigned on top of it.\n     * @function module:fjlInputFilter.toInput\n     * @param inputObj {Object|*} - Object to build `InputOptions` object from.\n     * @param [out = {}] {Object|*}\n     * @returns {InputOptions}\n     */\n    toInput = (inputObj, out = {}) => {\n        const _inputObj = defineEnumProps$([\n            [String,    'name', ''],\n            [Boolean,   'required', false],\n            [Array,     'filters', []],\n            [Array,     'validators', []],\n            [Boolean,   'breakOnFailure', false]\n        ], toValidationOptions(out));\n        if (isString(inputObj)) {\n            _inputObj.name = inputObj;\n        }\n        else if (inputObj) {\n            assign(_inputObj, inputObj);\n        }\n        if (_inputObj.required) {\n            _inputObj.validators.push(notEmptyValidator(null));\n        }\n        return _inputObj;\n    },\n\n    /**\n     * Returns an input validation result object with values of given object\n     * applied/assigned to it.\n     * @function module:fjlInputFilter.toInputValidationResult\n     * @param resultObj {Object|*}\n     * @returns {InputValidationResult}\n     */\n    toInputValidationResult = resultObj => {\n        const _result = defineEnumProps$([\n            [String, 'name', ''],\n            [Boolean, 'result', false],\n            [Array, 'messages', []]\n        ], {\n            value: null,\n            rawValue: null,\n            obscuredValue: null,\n            filteredValue: null\n        });\n        return assign(_result, resultObj);\n    }\n;\n\n/**\n * @memberOf fjlInputFilter\n * @class Input\n * @extends InputOptions\n */\nexport class Input {\n    constructor (inputObj) {\n        toInput(inputObj, this);\n    }\n    static of (inputObj) {\n        return new Input(inputObj);\n    }\n    validate (value) {\n        return validateInput(this, value);\n    }\n    validateIO (value) {\n        return validateIOInput(this, value);\n    }\n}\n","import {partition, foldl, map, assign, keys} from 'fjl';\nimport {validateInput, validateIOInput, toInput} from './Input';\nimport {defineEnumProps$} from 'fjl-mutable';\nimport {defaultErrorHandler} from './Utils';\n\n/**\n * @interface InputFilter {Object.<String, (Input|InputOptions)>}\n * @desc Contains input objects to validate against (key-value pair object).\n */\n\n/**\n * @interface InputFilterResult\n * @memberOf fjlInputFilter\n * @property {Boolean} result - Result of validation.\n * @property {Object.<String,InputValidationResult>} validInputs - Valid input results object.\n * @property {Object.<String,InputValidationResult>} invalidInputs - Invalid input results object.\n * @property {Array.<String,InputValidationResult>} validResults - Valid input results associative array.\n * @property {Array.<String,InputValidationResult>} invalidResults - Invalid input results associative array.\n * @property {Object.<String,Array.<String>>} messages - Error messages (if any) mapped to input names.\n */\n\nexport const\n\n    /**\n     * Returns an associative list from an object.\n     * @function module:fjlInputFilter.toArrayMap\n     * @param obj {Object}\n     * @returns {Array.<Array<String,Object>>} - Associative list.\n     */\n    toArrayMap = obj => keys(obj).map(key => [key, obj[key]]),\n\n    /**\n     * Returns an object from an associative list.\n     * @function module:fjlInputFilter.fromArrayMap\n     * @param arrayMap {Array.<Array<String,Object>>}\n     * @returns {Object.<String,Object>}\n     */\n    fromArrayMap = arrayMap => foldl((agg, [key, value]) => {\n            agg[key] = value;\n            return agg;\n        }, {}, arrayMap),\n\n    /**\n     * @function module:fjlInputFilter.validateInputFilter\n     * @param inputsObj {InputFilter}\n     * @param valuesObj {Object.<String,*>}\n     * @returns {InputFilterResult}\n     */\n    validateInputFilter = (inputsObj, valuesObj) => {\n        if (!inputsObj || !valuesObj) {\n            return toInputFilterResult({result: false});\n        }\n        const [validResults, invalidResults] =\n            partition(([_, result]) => result.result,\n                map(([key, inputObj]) =>\n                    [key, validateInput(inputObj, valuesObj[key])],\n                    toArrayMap(inputsObj)\n                )),\n            messages = foldl((agg, [key, result]) => {\n                agg[key] = result.messages;\n                return agg;\n            }, {}, invalidResults),\n            validInputs = fromArrayMap(validResults),\n            invalidInputs = fromArrayMap(invalidResults),\n            result = !invalidResults.length\n        ;\n        return toInputFilterResult({\n            result,\n            validInputs,\n            invalidInputs,\n            validResults,\n            invalidResults,\n            messages\n        });\n    },\n\n    /**\n     * @function module:fjlInputFilter.validateIOInputFilter\n     * @param inputsObj {InputFilter}\n     * @param valuesObj {Object.<String, *>}\n     * @param errorHandler {Function}\n     * @returns {Promise.<InputFilterResult>}\n     */\n    validateIOInputFilter = (inputsObj, valuesObj, errorHandler = defaultErrorHandler) => {\n        if (!inputsObj || !valuesObj) {\n            return Promise.resolve(toInputFilterResult({result: false}));\n        }\n\n        return Promise.all(map(([key, inputObj]) =>\n            validateIOInputWithName(inputObj, key, valuesObj[key]),\n                toArrayMap(inputsObj)\n        )).then(assocList => {\n            const [validResults, invalidResults] =\n                    partition(([_, result]) => result.result, assocList),\n                messages = foldl((agg, [key, result]) => {\n                    agg[key] = result.messages;\n                    return agg;\n                }, {}, invalidResults),\n                validInputs = fromArrayMap(validResults),\n                invalidInputs = fromArrayMap(invalidResults),\n                result = !invalidResults.length\n            ;\n\n            return toInputFilterResult({\n                result,\n                validInputs,\n                invalidInputs,\n                validResults,\n                invalidResults,\n                messages\n            });\n        },\n            errorHandler);\n    },\n\n    /**\n     * @function module:fjlInputFilter.validateIOInputWithName\n     * @param input {Input|InputOptions}\n     * @param name {String}\n     * @param value {*}\n     * @param errorHandler {Function}\n     * @returns {Promise.<Array.<String,InputValidationResult>>}\n     */\n    validateIOInputWithName = (input, name, value, errorHandler = defaultErrorHandler) =>\n        validateIOInput(input, value)\n            .then(result => Promise.resolve([name, result]), errorHandler),\n\n    /**\n     * @function module:fjlInputFilter.toInputFilter\n     * @param inObj {Object.<String, Object>}\n     * @param breakOnFailure {Boolean}\n     * @param outObj {Object|*}\n     * @returns {InputFilter}\n     */\n    toInputFilter = (inObj, breakOnFailure = false, outObj = {}) =>\n        Object.defineProperties(outObj,\n            foldl((agg, [key, inputOpsObj]) => {\n                const inputObj = toInput(assign(inputOpsObj, {name: key}));\n                inputObj.breakOnFailure = breakOnFailure;\n                agg[key] = {\n                    value: inputObj,\n                    enumerable: true\n                };\n                return agg;\n            }, {}, map(key =>\n                [key, inObj[key]],\n                keys(inObj)\n            ))\n        ),\n\n    /**\n     * @function module:fjlInputFilter.toInputFilterResult\n     * @param inResult {Object}\n     * @param outResult {Object|*}\n     * @returns {InputFilterResult}\n     */\n    toInputFilterResult = (inResult, outResult = {}) => {\n        const _outResult = defineEnumProps$([\n            [Boolean, 'result', false],\n            [Object,  'messages', {}],\n            [Object,  'validInputs', {}],\n            [Object,  'invalidInputs', {}],\n            [Array,   'validResults', []],\n            [Array,   'invalidResults', []]\n        ], outResult);\n        return inResult ? assign(_outResult, inResult) : _outResult;\n    }\n\n;\n\n/**\n * @class InputFilter\n */\nexport class InputFilter {\n    constructor (inputsObj, breakOnFailure = false) {\n        toInputFilter(inputsObj, breakOnFailure, this);\n    }\n    static of (inputsObj, breakOnFailure) {\n        return new InputFilter(inputsObj, breakOnFailure);\n    }\n    validate (data) {\n        return validateInputFilter(this, data);\n    }\n    validateIO (data) {\n        return validateIOInputFilter(this, data);\n    }\n}\n\nexport default {\n    InputFilter,\n    toInputFilter,\n    toInputFilterResult,\n    validateInputFilter,\n    validateIOInputFilter,\n    validateIOInputWithName,\n    toArrayMap,\n    fromArrayMap\n};\n","/**\n * @module fjlInputFilter\n */\nexport * from './Input';\nexport * from './InputFilter';\n"],"names":[],"mappings":"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"}
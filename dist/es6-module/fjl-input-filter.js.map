{"version":3,"file":"fjl-input-filter.js","sources":["../../src/Utils.js","../../src/Input.js","../../src/InputFilter.js","../../src/fjlInputFilter.js"],"sourcesContent":["/**\r\n * Same as `console.error`.  Used by *IO variant methods (methods that work with promises) in fjlInputFilter;\r\n * E.g., used as the error catcher on promises returned from IO processes.\r\n * @function module:fjlInputFilter.defaultErrorHandler\r\n * @returns {void}\r\n */\r\nexport const defaultErrorHandler = console.error.bind(console);\r\n","/**\r\n * Created by Ely on 7/24/2014.\r\n */\r\nimport {defineEnumProps$} from 'fjl-mutable';\r\nimport {assign, apply, compose, concat, isString} from 'fjl';\r\nimport {toValidationResult, toValidationOptions, notEmptyValidator} from 'fjl-validator';\r\nimport {defaultErrorHandler} from './Utils';\r\n\r\n/*---------------------------------------------------*/\r\n/* VIRTUAL TYPES AND INTERFACES */\r\n/*---------------------------------------------------*/\r\n/**\r\n * @interface InputValidationResult\r\n * @memberOf fjlInputFilter\r\n * @property {String} name - `Input` this result was generated with.\r\n * @property {Boolean} result - Result of validation.\r\n * @property {Array} messages - Any error messages if `result` is `false`.\r\n * @property {*} value=null - Value tested against (if `filters` exist on given `#Input` object the `value` is what is returned from the results of running filters on value).\r\n * @property {*} rawValue=null - Raw value tested against.\r\n * @property {*} obscuredValue=null - Obscured value if validation `result` is `true`.\r\n * @property {*} filteredValue=null - Filtered result if validation `result` is `true`.\r\n */\r\n\r\n/**\r\n * @interface InputOptions\r\n * @memberOf fjlInputFilter\r\n * @desc Contains rules for validating and/or filtering an input.\r\n * @property {String} name='' - Input's name.\r\n * @property {Boolean} required=false - Whether input is required or not.\r\n * @property {Array} filters=[] - Any filter functions to apply to value.\r\n * @property {Array} validators=[] - Any validators to validate against for given value (to validator).\r\n * @property {Boolean} breakOnFailure=false - Whether or not to 'break' on a validation failure result or not.\r\n * @property {Boolean} valueObscured=false - Whether to obscure the value being tested against (to the assigned places) or not).\r\n * @property {Function} valueObscurator=((x) => x) - Obscurator used for obscuring a value given to validation.\r\n */\r\n\r\nexport const\r\n\r\n    /**\r\n     * Validates an input object based.\r\n     * @function module:fjlInputFilter.validateInput\r\n     * @param input {Input|InputOptions}\r\n     * @param value {*}\r\n     * @returns {InputValidationResult}\r\n     */\r\n    validateInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator, name} = input,\r\n            vResult = runValidators(validators, breakOnFailure, value),\r\n            fResult = runFilters(filters, value),\r\n            oResult = valueObscured && valueObscurator ? valueObscurator(fResult) : fResult;\r\n        return toInputValidationResult(assign(vResult, {\r\n            name: name || '',\r\n            rawValue: value,\r\n            value: fResult,\r\n            filteredValue: fResult,\r\n            obscuredValue: oResult\r\n        }));\r\n    },\r\n\r\n    /**\r\n     * Validates an input object that may have IOValidators.  Returns\r\n     * a validation result wrapped in a promise.\r\n     * @function module:fjlInputFilter.validateIOInput\r\n     * @param input {Input|InputOptions}\r\n     * @param value {*}\r\n     * @returns {Promise.<InputValidationResult>}\r\n     */\r\n    validateIOInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator} = input,\r\n            pendingValidation = validators && validators.length ?\r\n                runIOValidators(validators, breakOnFailure, value, input) :\r\n                    Promise.resolve({result: true})\r\n        ;\r\n        return pendingValidation.then(result =>\r\n            runIOFilters(filters, value)\r\n                .then(filteredValue => {\r\n                    result.rawValue = value;\r\n                    result.value = result.filteredValue = filteredValue;\r\n                    result.obscuredValue =\r\n                        valueObscured && valueObscurator ?\r\n                            valueObscurator(filteredValue) : filteredValue;\r\n                    return toInputValidationResult(result);\r\n                })\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Runs validator against given `value`.\r\n     * @function module:fjlInputFilter.runValidators\r\n     * @param validators {Array.<Function>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param value {*}\r\n     * @returns {*}\r\n     */\r\n    runValidators = (validators, breakOnFailure, value) => {\r\n        let result = true,\r\n            i = 0,\r\n            messageResults = [];\r\n        if (!validators || !validators.length) {\r\n            return toValidationResult({result});\r\n        }\r\n        const limit = validators.length;\r\n        for (; i < limit; i++) {\r\n            const vResult = validators[i](value);\r\n            if (!vResult.result) {\r\n                messageResults.push(vResult.messages);\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return toValidationResult({result, messages: concat(messageResults)});\r\n    },\r\n\r\n    /**\r\n     * Runs (possibly) IOValidators against given `value`.\r\n     * @function module:fjlInputFilter.runIOValidators\r\n     * @param validators {Array.<Function>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param value {*}\r\n     * @param [errorCallback=console.error] {Function}\r\n     * @returns {*}\r\n     */\r\n    runIOValidators = (validators, breakOnFailure, value, errorCallback = defaultErrorHandler) => {\r\n        if (!validators || !validators.length) {\r\n            return Promise.resolve(toValidationResult({result: true}));\r\n        }\r\n        const limit = validators.length,\r\n            pendingResults = [];\r\n        let i = 0,\r\n            result = true;\r\n        for (; i < limit; i++) {\r\n            const validator = validators[i],\r\n                vResult = validator(value);\r\n            if (vResult instanceof Promise) {\r\n                pendingResults.push(vResult.catch(errorCallback));\r\n                continue;\r\n            }\r\n            pendingResults.push(vResult);\r\n            if (!vResult.result) {\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.all(pendingResults)\r\n            .then(results => {\r\n                const failedResults = results.filter(rslt => !rslt.result),\r\n                    interimResult = {\r\n                        result,\r\n                        messages: failedResults.reduce((agg, item) => {\r\n                            agg = agg.concat(item.messages);\r\n                            return agg;\r\n                        }, [])\r\n                    };\r\n                if (failedResults.length) {\r\n                    interimResult.result = false;\r\n                }\r\n                return toValidationResult(interimResult);\r\n            })\r\n            .catch(errorCallback);\r\n    },\r\n\r\n    /**\r\n     * Runs filters on value (successively).\r\n     * @function module:fjlInputFilter.runFilters\r\n     * @param filters {Array.<Function>}\r\n     * @param value {*}\r\n     * @returns {*}\r\n     */\r\n    runFilters = (filters, value) => filters && filters.length ?\r\n        apply(compose, filters)(value) : value,\r\n\r\n    /**\r\n     * Runs filters on value (successively) and returns result wrapped in a promise.\r\n     * @function module:fjlInputFilter.runIOFilters\r\n     * @param filters {Array.<Function>}\r\n     * @param value {*}\r\n     * @param [errorCallback=console.error] {Function}\r\n     * @returns {Promise.<*>}\r\n     */\r\n    runIOFilters = (filters, value, errorCallback = defaultErrorHandler) =>\r\n        runFilters(filters ? filters.map(filter => x => x.then(filter)) : null,\r\n            Promise.resolve(value).catch(errorCallback)),\r\n\r\n    /**\r\n     * Returns an `InputOptions` object from given object and optionally turns the `out` object into\r\n     * said `InputOptions` with firstParam assigned on top of it.\r\n     * @function module:fjlInputFilter.toInput\r\n     * @param inputObj {Object|*} - Object to build `InputOptions` object from.\r\n     * @param [out = {}] {Object|*}\r\n     * @returns {InputOptions}\r\n     */\r\n    toInput = (inputObj, out = {}) => {\r\n        const _inputObj = defineEnumProps$([\r\n            [String,    'name', ''],\r\n            [Boolean,   'required', false],\r\n            [Array,     'filters', []],\r\n            [Array,     'validators', []],\r\n            [Boolean,   'breakOnFailure', false]\r\n        ], toValidationOptions(out));\r\n        if (isString(inputObj)) {\r\n            _inputObj.name = inputObj;\r\n        }\r\n        else if (inputObj) {\r\n            assign(_inputObj, inputObj);\r\n        }\r\n        if (_inputObj.required) {\r\n            _inputObj.validators.push(notEmptyValidator(null));\r\n        }\r\n        return _inputObj;\r\n    },\r\n\r\n    /**\r\n     * Returns an input validation result object with values of given object\r\n     * applied/assigned to it.\r\n     * @function module:fjlInputFilter.toInputValidationResult\r\n     * @param resultObj {Object|*}\r\n     * @returns {InputValidationResult}\r\n     */\r\n    toInputValidationResult = resultObj => {\r\n        const _result = defineEnumProps$([\r\n            [String, 'name', ''],\r\n            [Boolean, 'result', false],\r\n            [Array, 'messages', []]\r\n        ], {\r\n            value: null,\r\n            rawValue: null,\r\n            obscuredValue: null,\r\n            filteredValue: null\r\n        });\r\n        return assign(_result, resultObj);\r\n    }\r\n;\r\n\r\n/**\r\n * @memberOf fjlInputFilter\r\n * @class Input\r\n * @extends InputOptions\r\n */\r\nexport class Input {\r\n    constructor (inputObj) {\r\n        toInput(inputObj, this);\r\n    }\r\n    static of (inputObj) {\r\n        return new Input(inputObj);\r\n    }\r\n    validate (value) {\r\n        return validateInput(this, value);\r\n    }\r\n    validateIO (value) {\r\n        return validateIOInput(this, value);\r\n    }\r\n}\r\n","import {partition, foldl, map, assign, keys} from 'fjl';\r\nimport {validateInput, validateIOInput, toInput} from './Input';\r\nimport {defineEnumProps$} from 'fjl-mutable';\r\nimport {defaultErrorHandler} from './Utils';\r\n\r\n/**\r\n * @interface InputFilter {Object.<String, (Input|InputOptions)>}\r\n * @desc Contains input objects to validate against (key-value pair object).\r\n */\r\n\r\n/**\r\n * @interface InputFilterResult\r\n * @memberOf fjlInputFilter\r\n * @property {Boolean} result - Result of validation.\r\n * @property {Object.<String,InputValidationResult>} validInputs - Valid input results object.\r\n * @property {Object.<String,InputValidationResult>} invalidInputs - Invalid input results object.\r\n * @property {Array.<String,InputValidationResult>} validResults - Valid input results associative array.\r\n * @property {Array.<String,InputValidationResult>} invalidResults - Invalid input results associative array.\r\n * @property {Object.<String,Array.<String>>} messages - Error messages (if any) mapped to input names.\r\n */\r\n\r\nexport const\r\n\r\n    /**\r\n     * Returns an associative list from an object.\r\n     * @function module:fjlInputFilter.toArrayMap\r\n     * @param obj {Object}\r\n     * @returns {Array.<Array<String,Object>>} - Associative list.\r\n     */\r\n    toArrayMap = obj => keys(obj).map(key => [key, obj[key]]),\r\n\r\n    /**\r\n     * Returns an object from an associative list.\r\n     * @function module:fjlInputFilter.fromArrayMap\r\n     * @param arrayMap {Array.<Array<String,Object>>}\r\n     * @returns {Object.<String,Object>}\r\n     */\r\n    fromArrayMap = arrayMap => foldl((agg, [key, value]) => {\r\n            agg[key] = value;\r\n            return agg;\r\n        }, {}, arrayMap),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateInputFilter\r\n     * @param inputsObj {InputFilter}\r\n     * @param valuesObj {Object.<String,*>}\r\n     * @returns {InputFilterResult}\r\n     */\r\n    validateInputFilter = (inputsObj, valuesObj) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return toInputFilterResult({result: false});\r\n        }\r\n        const [validResults, invalidResults] =\r\n            partition(([_, result]) => result.result,\r\n                map(([key, inputObj]) =>\r\n                    [key, validateInput(inputObj, valuesObj[key])],\r\n                    toArrayMap(inputsObj)\r\n                )),\r\n            messages = foldl((agg, [key, result]) => {\r\n                agg[key] = result.messages;\r\n                return agg;\r\n            }, {}, invalidResults),\r\n            validInputs = fromArrayMap(validResults),\r\n            invalidInputs = fromArrayMap(invalidResults),\r\n            result = !invalidResults.length\r\n        ;\r\n        return toInputFilterResult({\r\n            result,\r\n            validInputs,\r\n            invalidInputs,\r\n            validResults,\r\n            invalidResults,\r\n            messages\r\n        });\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateIOInputFilter\r\n     * @param inputsObj {InputFilter}\r\n     * @param valuesObj {Object.<String, *>}\r\n     * @param errorHandler {Function}\r\n     * @returns {Promise.<InputFilterResult>}\r\n     */\r\n    validateIOInputFilter = (inputsObj, valuesObj, errorHandler = defaultErrorHandler) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return Promise.resolve(toInputFilterResult({result: false}));\r\n        }\r\n\r\n        return Promise.all(map(([key, inputObj]) =>\r\n            validateIOInputWithName(inputObj, key, valuesObj[key]),\r\n                toArrayMap(inputsObj)\r\n        )).then(assocList => {\r\n            const [validResults, invalidResults] =\r\n                    partition(([_, result]) => result.result, assocList),\r\n                messages = foldl((agg, [key, result]) => {\r\n                    agg[key] = result.messages;\r\n                    return agg;\r\n                }, {}, invalidResults),\r\n                validInputs = fromArrayMap(validResults),\r\n                invalidInputs = fromArrayMap(invalidResults),\r\n                result = !invalidResults.length\r\n            ;\r\n\r\n            return toInputFilterResult({\r\n                result,\r\n                validInputs,\r\n                invalidInputs,\r\n                validResults,\r\n                invalidResults,\r\n                messages\r\n            });\r\n        },\r\n            errorHandler);\r\n    },\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.validateIOInputWithName\r\n     * @param input {Input|InputOptions}\r\n     * @param name {String}\r\n     * @param value {*}\r\n     * @param errorHandler {Function}\r\n     * @returns {Promise.<Array.<String,InputValidationResult>>}\r\n     */\r\n    validateIOInputWithName = (input, name, value, errorHandler = defaultErrorHandler) =>\r\n        validateIOInput(input, value)\r\n            .then(result => Promise.resolve([name, result]), errorHandler),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.toInputFilter\r\n     * @param inObj {Object.<String, Object>}\r\n     * @param breakOnFailure {Boolean}\r\n     * @param outObj {Object|*}\r\n     * @returns {InputFilter}\r\n     */\r\n    toInputFilter = (inObj, breakOnFailure = false, outObj = {}) =>\r\n        Object.defineProperties(outObj,\r\n            foldl((agg, [key, inputOpsObj]) => {\r\n                const inputObj = toInput(assign(inputOpsObj, {name: key}));\r\n                inputObj.breakOnFailure = breakOnFailure;\r\n                agg[key] = {\r\n                    value: inputObj,\r\n                    enumerable: true\r\n                };\r\n                return agg;\r\n            }, {}, map(key =>\r\n                [key, inObj[key]],\r\n                keys(inObj)\r\n            ))\r\n        ),\r\n\r\n    /**\r\n     * @function module:fjlInputFilter.toInputFilterResult\r\n     * @param inResult {Object}\r\n     * @param outResult {Object|*}\r\n     * @returns {InputFilterResult}\r\n     */\r\n    toInputFilterResult = (inResult, outResult = {}) => {\r\n        const _outResult = defineEnumProps$([\r\n            [Boolean, 'result', false],\r\n            [Object,  'messages', {}],\r\n            [Object,  'validInputs', {}],\r\n            [Object,  'invalidInputs', {}],\r\n            [Array,   'validResults', []],\r\n            [Array,   'invalidResults', []]\r\n        ], outResult);\r\n        return inResult ? assign(_outResult, inResult) : _outResult;\r\n    }\r\n\r\n;\r\n\r\n/**\r\n * @class InputFilter\r\n */\r\nexport class InputFilter {\r\n    constructor (inputsObj, breakOnFailure = false) {\r\n        toInputFilter(inputsObj, breakOnFailure, this);\r\n    }\r\n    static of (inputsObj, breakOnFailure) {\r\n        return new InputFilter(inputsObj, breakOnFailure);\r\n    }\r\n    validate (data) {\r\n        return validateInputFilter(this, data);\r\n    }\r\n    validateIO (data) {\r\n        return validateIOInputFilter(this, data);\r\n    }\r\n}\r\n\r\nexport default {\r\n    InputFilter,\r\n    toInputFilter,\r\n    toInputFilterResult,\r\n    validateInputFilter,\r\n    validateIOInputFilter,\r\n    validateIOInputWithName,\r\n    toArrayMap,\r\n    fromArrayMap\r\n};\r\n","/**\r\n * @module fjlInputFilter\r\n */\r\nexport * from './Input';\r\nexport * from './InputFilter';\r\n"],"names":[],"mappings":"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"}
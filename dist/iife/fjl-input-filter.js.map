{"version":3,"file":"fjl-input-filter.js","sources":["../../src/Input.js","../../src/InputFilter.js"],"sourcesContent":["/**\r\n * Created by Ely on 7/24/2014.\r\n * This is a crude implementation\r\n * @todo review if we really want to have fallback value\r\n *      functionality for javascript\r\n */\r\nimport {defineEnumProps$} from 'fjl-mutable';\r\nimport {assign, apply, compose, concat, isString} from 'fjl';\r\nimport {toValidationResult, toValidationOptions, notEmptyValidator} from 'fjl-validator';\r\n\r\nexport const\r\n\r\n    defaultErrorCallback = console.log.bind(console),\r\n\r\n    validateInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator, name} = input,\r\n            vResult = runValidators(validators, breakOnFailure, value),\r\n            fResult = runFilters(filters, value),\r\n            oResult = valueObscured && valueObscurator ? valueObscurator(fResult) : fResult;\r\n        return toInputValidationResult(assign(vResult, {\r\n            name: name || '',\r\n            rawValue: value,\r\n            value: fResult,\r\n            filteredValue: fResult,\r\n            obscuredValue: oResult\r\n        }));\r\n    },\r\n\r\n    validateIOInput = (input, value) => {\r\n        const {validators, filters, breakOnFailure,\r\n                valueObscured, valueObscurator} = input,\r\n            pendingValidation = validators && validators.length ?\r\n                runIOValidators(validators, breakOnFailure, value, input) :\r\n                    Promise.resolve({result: true})\r\n        ;\r\n        return pendingValidation.then(result =>\r\n            runIOFilters(filters, value)\r\n                .then(filteredValue => {\r\n                    result.rawValue = value;\r\n                    result.value = result.filteredValue = filteredValue;\r\n                    result.obscuredValue =\r\n                        valueObscured && valueObscurator ?\r\n                            valueObscurator(filteredValue) : filteredValue;\r\n                    return toInputValidationResult(result);\r\n                })\r\n        );\r\n    },\r\n\r\n    runValidators = (validators, breakOnFailure, value) => {\r\n        let result = true,\r\n            i = 0,\r\n            messageResults = [];\r\n        if (!validators || !validators.length) {\r\n            return toValidationResult({result});\r\n        }\r\n        const limit = validators.length;\r\n        for (; i < limit; i++) {\r\n            const vResult = validators[i](value);\r\n            if (!vResult.result) {\r\n                messageResults.push(vResult.messages);\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return toValidationResult({result, messages: concat(messageResults)});\r\n    },\r\n\r\n    runIOValidators = (validators, breakOnFailure, value, errorCallback = defaultErrorCallback) => {\r\n        if (!validators || !validators.length) {\r\n            return Promise.resolve(toValidationResult({result: true}));\r\n        }\r\n        const limit = validators.length,\r\n            pendingResults = [];\r\n        let i = 0,\r\n            result = true;\r\n        for (; i < limit; i++) {\r\n            const validator = validators[i],\r\n                vResult = validator(value);\r\n            if (vResult instanceof Promise) {\r\n                pendingResults.push(vResult.catch(errorCallback));\r\n                continue;\r\n            }\r\n            pendingResults.push(vResult);\r\n            if (!vResult.result) {\r\n                result = false;\r\n                if (breakOnFailure) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return Promise.all(pendingResults)\r\n            .then(results => {\r\n                const failedResults = results.filter(rslt => !rslt.result),\r\n                    interimResult = {\r\n                        result,\r\n                        messages: failedResults.reduce((agg, item) => {\r\n                            agg = agg.concat(item.messages);\r\n                            return agg;\r\n                        }, [])\r\n                    };\r\n                if (failedResults.length) {\r\n                    interimResult.result = false;\r\n                }\r\n                return toValidationResult(interimResult);\r\n            })\r\n            .catch(errorCallback);\r\n    },\r\n\r\n    runFilters = (filters, value) => filters && filters.length ?\r\n        apply(compose, filters)(value) : value,\r\n\r\n    runIOFilters = (filters, value, errorCallback = defaultErrorCallback) =>\r\n        runFilters(filters ? filters.map(filter => x => x.then(filter)) : null,\r\n            Promise.resolve(value).catch(errorCallback)),\r\n\r\n    toInput = (inputObj, out = {}) => {\r\n        const _inputObj = defineEnumProps$([\r\n            [String,    'name', ''],\r\n            [Boolean,   'required', false],\r\n            [Array,     'filters', []],\r\n            [Array,     'validators', []],\r\n            [Boolean,   'breakOnFailure', false]\r\n        ], toValidationOptions(out));\r\n        if (isString(inputObj)) {\r\n            _inputObj.name = inputObj;\r\n        }\r\n        else if (inputObj) {\r\n            assign(_inputObj, inputObj);\r\n        }\r\n        if (_inputObj.required) {\r\n            _inputObj.validators.push(notEmptyValidator(null));\r\n        }\r\n        return _inputObj;\r\n    },\r\n\r\n    toInputValidationResult = resultObj => {\r\n        const _result = defineEnumProps$([\r\n            [String, 'name', ''],\r\n            [Boolean, 'result', false],\r\n            [Array, 'messages', []]\r\n        ], {\r\n            value: null,\r\n            rawValue: null,\r\n            obscuredValue: null,\r\n            filteredValue: null\r\n        });\r\n        return assign(_result, resultObj);\r\n    }\r\n;\r\n\r\nexport class Input {\r\n    constructor (inputObj) {\r\n        toInput(inputObj, this);\r\n    }\r\n    static of (inputObj) {\r\n        return new Input(inputObj);\r\n    }\r\n    validate (value) {\r\n        return validateInput(this, value);\r\n    }\r\n    validateIO (value) {\r\n        return validateIOInput(this, value);\r\n    }\r\n}\r\n","import {partition, foldl, map, assign, keys} from 'fjl';\r\n\r\nimport {validateInput, validateIOInput, toInput} from './Input';\r\n\r\nimport {defineEnumProps$} from 'fjl-mutable';\r\n\r\nexport const\r\n\r\n    defaultErrorHandler = console.error.bind(console),\r\n\r\n    toArrayMap = obj => keys(obj).map(key => [key, obj[key]]),\r\n\r\n    fromArrayMap = arrayMap => foldl((agg, [key, value]) => {\r\n            agg[key] = value;\r\n            return agg;\r\n        }, {}, arrayMap),\r\n\r\n    validateInputFilter = (inputsObj, valuesObj) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return toInputFilterResult({result: false});\r\n        }\r\n        const [validResults, invalidResults] =\r\n            partition(([_, result]) => result.result,\r\n                map(([key, inputObj]) =>\r\n                    [key, validateInput(inputObj, valuesObj[key])],\r\n                    toArrayMap(inputsObj)\r\n                )),\r\n            messages = foldl((agg, [key, result]) => {\r\n                agg[key] = result.messages;\r\n                return agg;\r\n            }, {}, invalidResults),\r\n            validInputs = fromArrayMap(validResults),\r\n            invalidInputs = fromArrayMap(invalidResults),\r\n            result = !invalidResults.length\r\n        ;\r\n        return toInputFilterResult({\r\n            result,\r\n            validInputs,\r\n            invalidInputs,\r\n            validResults,\r\n            invalidResults,\r\n            messages\r\n        });\r\n    },\r\n\r\n    validateIOInputFilter = (inputsObj, valuesObj, errorHandler = defaultErrorHandler) => {\r\n        if (!inputsObj || !valuesObj) {\r\n            return Promise.resolve(toInputFilterResult({result: false}));\r\n        }\r\n\r\n        return Promise.all(map(([key, inputObj]) =>\r\n            validateIOInputWithName(inputObj, key, valuesObj[key]),\r\n                toArrayMap(inputsObj)\r\n        )).then(assocList => {\r\n            const [validResults, invalidResults] =\r\n                    partition(([_, result]) => result.result, assocList),\r\n                messages = foldl((agg, [key, result]) => {\r\n                    agg[key] = result.messages;\r\n                    return agg;\r\n                }, {}, invalidResults),\r\n                validInputs = fromArrayMap(validResults),\r\n                invalidInputs = fromArrayMap(invalidResults),\r\n                result = !invalidResults.length\r\n            ;\r\n\r\n            return toInputFilterResult({\r\n                result,\r\n                validInputs,\r\n                invalidInputs,\r\n                validResults,\r\n                invalidResults,\r\n                messages\r\n            });\r\n        },\r\n            errorHandler);\r\n    },\r\n\r\n    validateIOInputWithName = (input, name, value, errorHandler = defaultErrorHandler) =>\r\n        validateIOInput(input, value)\r\n            .then(result => Promise.resolve([name, result]), errorHandler),\r\n\r\n    toInputFilter = (inObj, breakOnFailure = false, outObj = {}) =>\r\n        Object.defineProperties(outObj,\r\n            foldl((agg, [key, inputOpsObj]) => {\r\n                const inputObj = toInput(assign(inputOpsObj, {name: key}));\r\n                inputObj.breakOnFailure = breakOnFailure;\r\n                agg[key] = {\r\n                    value: inputObj,\r\n                    enumerable: true\r\n                };\r\n                return agg;\r\n            }, {}, map(key =>\r\n                [key, inObj[key]],\r\n                keys(inObj)\r\n            ))\r\n        ),\r\n\r\n    toInputFilterResult = (inResult, outResult = {}) => {\r\n        const _outResult = defineEnumProps$([\r\n            [Boolean, 'result', false],\r\n            [Object,  'messages', {}],\r\n            [Object,  'validInputs', {}],\r\n            [Object,  'invalidInputs', {}],\r\n            [Array,   'validResults', []],\r\n            [Array,   'invalidResults', []]\r\n        ], outResult);\r\n        return inResult ? assign(_outResult, inResult) : _outResult;\r\n    }\r\n\r\n;\r\n\r\nexport class InputFilter {\r\n    constructor (inputsObj, breakOnFailure = false) {\r\n        toInputFilter(inputsObj, breakOnFailure, this);\r\n    }\r\n    static of (inputsObj, breakOnFailure) {\r\n        return new InputFilter(inputsObj, breakOnFailure);\r\n    }\r\n    validate (data) {\r\n        return validateInputFilter(this, data);\r\n    }\r\n    validateIO (data) {\r\n        return validateIOInputFilter(this, data);\r\n    }\r\n}\r\n\r\nexport default {\r\n    InputFilter,\r\n    toInputFilter,\r\n    toInputFilterResult,\r\n    validateInputFilter,\r\n    validateIOInputFilter,\r\n    validateIOInputWithName,\r\n    toArrayMap,\r\n    fromArrayMap\r\n};\r\n"],"names":["defaultErrorCallback","console","log","bind","validateInput","input","value","validators","filters","breakOnFailure","valueObscured","valueObscurator","name","vResult","runValidators","fResult","runFilters","oResult","toInputValidationResult","assign","validateIOInput","pendingValidation","length","runIOValidators","Promise","resolve","result","then","runIOFilters","rawValue","filteredValue","obscuredValue","i","messageResults","toValidationResult","limit","push","messages","concat","errorCallback","pendingResults","validator","catch","all","failedResults","results","filter","rslt","interimResult","reduce","agg","item","apply","compose","map","x","toInput","inputObj","out","_inputObj","defineEnumProps$","String","Boolean","Array","toValidationOptions","isString","required","notEmptyValidator","_result","resultObj","Input","defaultErrorHandler","error","toArrayMap","keys","obj","key","fromArrayMap","foldl","arrayMap","validateInputFilter","inputsObj","valuesObj","toInputFilterResult","partition","_","validResults","invalidResults","validInputs","invalidInputs","validateIOInputFilter","errorHandler","validateIOInputWithName","assocList","toInputFilter","inObj","outObj","Object","defineProperties","inputOpsObj","inResult","outResult","_outResult","InputFilter","data"],"mappings":"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"}